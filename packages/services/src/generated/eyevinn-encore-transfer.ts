/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    /** Say hello */
    get: {
      responses: {
        /** The magical words! */
        200: {
          schema: string;
        };
      };
    };
  };
  '/encore-transferinstance': {
    /** List all running encore-transfer instances */
    get: {
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the encore-transfer instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
            RedisUrl: string;
            RedisQueue?: string;
            Output: string;
            OscAccessToken: string;
            AwsAccessKeyIdSecret?: string;
            AwsSecretAccessKeySecret?: string;
          }[];
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
    /** Launch a new encore-transfer instance */
    post: {
      parameters: {
        body: {
          body?: {
            /** @description Name of the encore-transfer instance */
            name: string;
            RedisUrl: string;
            RedisQueue?: string;
            Output: string;
            OscAccessToken: string;
            AwsAccessKeyIdSecret?: string;
            AwsSecretAccessKeySecret?: string;
          };
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the encore-transfer instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
            RedisUrl: string;
            RedisQueue?: string;
            Output: string;
            OscAccessToken: string;
            AwsAccessKeyIdSecret?: string;
            AwsSecretAccessKeySecret?: string;
          };
        };
        /** Default Response */
        403: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        409: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/encore-transferinstance/{id}': {
    /** Obtain status and resource URLs for an encore-transfer instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore-transfer instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the encore-transfer instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
            RedisUrl: string;
            RedisQueue?: string;
            Output: string;
            OscAccessToken: string;
            AwsAccessKeyIdSecret?: string;
            AwsSecretAccessKeySecret?: string;
          };
        };
        /** Default Response */
        404: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
    /** Stop and remove an encore-transfer instance */
    delete: {
      parameters: {
        path: {
          /** Name of the encore-transfer instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        204: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/health/{id}': {
    /** Return status of encore-transfer instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore-transfer instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @enum {string} */
            status: 'starting' | 'running' | 'stopped' | 'failed' | 'unknown';
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/logs/{id}': {
    /** Return the latest logs from the encore-transfer instance */
    get: {
      parameters: {
        query: {
          timestamps?: boolean;
          sinceSeconds?: number;
        };
        path: {
          /** Name of the encore-transfer instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/ports/{id}': {
    /** Return the exposed extra ports for encore-transfer instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore-transfer instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            externalIp: string;
            externalPort: number;
            internalPort: number;
          }[];
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
}

export interface definitions {}

export interface operations {}

export interface external {}

export type EyevinnEncoreTransfer =
  paths['/encore-transferinstance/{id}']['get']['responses']['200']['schema'];

export type EyevinnEncoreTransferConfig =
  paths['/encore-transferinstance']['post']['parameters']['body']['body'];

import {
  Context,
  createInstance,
  waitForInstanceReady,
  removeInstance
} from '@osaas/client-core';

/**
 * Encore Transfer
 *
 * Introducing Encore Transfer - the ultimate service for seamless output transfer in a video processing pipeline. With easy installation and essential environment variables, this service is a game-changer for Open Source Cloud users. Dive into our comprehensive documentation and join our supportive community on Slack. Don't miss out on this opportunity to revolutionize your video workflow with Eyevinn Technology's innovative solution. Get in touch with us for further customization and support options!
 *
 * Create a new encore-transfer
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnEncoreTransferConfig}} body - Service instance configuration
 * @returns {EyevinnEncoreTransfer} - Service instance
 * @example
 * import { Context, createEyevinnEncoreTransferInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnEncoreTransferInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
export async function createEyevinnEncoreTransferInstance(
  ctx: Context,
  body: EyevinnEncoreTransferConfig
): Promise<EyevinnEncoreTransfer> {
  const serviceAccessToken = await ctx.getServiceAccessToken(
    'eyevinn-encore-transfer'
  );
  const instance = await createInstance(
    ctx,
    'eyevinn-encore-transfer',
    serviceAccessToken,
    body
  );
  await waitForInstanceReady('eyevinn-encore-transfer', instance.name, ctx);
  return instance;
}

/**
 * Encore Transfer
 *
 * Remove a encore-transfer
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the encore-transfer to be removed
 */
export async function removeEyevinnEncoreTransferInstance(
  ctx: Context,
  name: string
): Promise<void> {
  const serviceAccessToken = await ctx.getServiceAccessToken(
    'eyevinn-encore-transfer'
  );
  await removeInstance(
    ctx,
    'eyevinn-encore-transfer',
    name,
    serviceAccessToken
  );
}
