/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    /** Say hello */
    get: {
      responses: {
        /** The magical words! */
        200: {
          schema: string;
        };
      };
    };
  };
  '/encoreinstance': {
    /** List all running encore instances */
    get: {
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the encore instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            /** @description URL of profiles list */
            profilesUrl: string;
            /** @description S3 access key ID */
            s3AccessKeyId: string;
            /** @description S3 secret access key */
            s3SecretAccessKey: string;
            /** @description S3/AWS session token */
            s3SessionToken: string;
            /** @description S3 region */
            s3Region: string;
            /** @description S3 endpoint */
            s3Endpoint: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              enqueueJob: {
                /** @description URL to enqueue job */
                url: string;
                /** @description HTTP method */
                method: string;
              };
              listJobs: {
                /** @description URL to list jobs */
                url: string;
                /** @description HTTP method */
                method: string;
              };
            };
          }[];
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
    /** Launch a new encore instance */
    post: {
      parameters: {
        body: {
          body?: {
            /** @description Name of the encore instance */
            name: string;
            /** @description Url pointing to list of transcoding profiles (default is to use default profiles, see ...) */
            profilesUrl?: string;
            /** @description (Optional) S3 access key ID, needed for s3 input/output. It is strongly recommended to store this value in a secret. */
            s3AccessKeyId?: string;
            /** @description (Optional) S3 secret access key, needed for s3 input/output. It is strongly recommended to store this value in a secret. */
            s3SecretAccessKey?: string;
            /** @description (Optional) S3/AWS session token. It is strongly recommended to store this value in a secret. */
            s3SessionToken?: string;
            /** @description (Optional) S3 region */
            s3Region?: string;
            /** @description (Optional) S3 endpoint */
            s3Endpoint?: string;
          };
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the encore instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            /** @description URL of profiles list */
            profilesUrl: string;
            /** @description S3 access key ID */
            s3AccessKeyId: string;
            /** @description S3 secret access key */
            s3SecretAccessKey: string;
            /** @description S3/AWS session token */
            s3SessionToken: string;
            /** @description S3 region */
            s3Region: string;
            /** @description S3 endpoint */
            s3Endpoint: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              enqueueJob: {
                /** @description URL to enqueue job */
                url: string;
                /** @description HTTP method */
                method: string;
              };
              listJobs: {
                /** @description URL to list jobs */
                url: string;
                /** @description HTTP method */
                method: string;
              };
            };
          };
        };
        /** Default Response */
        403: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        409: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/encoreinstance/{id}': {
    /** Obtain status and resource URLs for an encore instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the encore instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            /** @description URL of profiles list */
            profilesUrl: string;
            /** @description S3 access key ID */
            s3AccessKeyId: string;
            /** @description S3 secret access key */
            s3SecretAccessKey: string;
            /** @description S3/AWS session token */
            s3SessionToken: string;
            /** @description S3 region */
            s3Region: string;
            /** @description S3 endpoint */
            s3Endpoint: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              enqueueJob: {
                /** @description URL to enqueue job */
                url: string;
                /** @description HTTP method */
                method: string;
              };
              listJobs: {
                /** @description URL to list jobs */
                url: string;
                /** @description HTTP method */
                method: string;
              };
            };
          };
        };
        /** Default Response */
        404: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
    /** Stop and remove an encore instance */
    delete: {
      parameters: {
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        204: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/health/{id}': {
    /** Return status of encore instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @enum {string} */
            status: 'starting' | 'running' | 'stopped' | 'failed' | 'unknown';
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/logs/{id}': {
    /** Return the latest logs from the encore instance */
    get: {
      parameters: {
        query: {
          timestamps?: boolean;
          sinceSeconds?: number;
        };
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/ports/{id}': {
    /** Return the exposed extra ports for encore instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            externalIp: string;
            externalPort: number;
            internalPort: number;
          }[];
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/encoreinstance/{id}/jobs': {
    /** List all jobs for an Encore instance */
    get: {
      parameters: {
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description URL to job resource */
            url: string;
            /** @description Status of a job */
            status: string;
          }[];
        };
      };
    };
    /** Enqueue a simple job on an Encore instance. For full featureset use the enqueue job resource on the Encore instance */
    post: {
      parameters: {
        body: {
          body?: {
            /** @default program */
            profile: string;
            /**
             * @description Name for output folder
             * @default /usercontent/demo
             */
            outputFolder: string;
            /** @default demo_ */
            baseName: string;
            inputs: {
              /** @default https://testcontent.eyevinn.technology/mp4/stswe-tvplus-promo.mp4 */
              uri: string;
              /** @default AudioVideo */
              type: string;
            }[];
            /** @default 0 */
            duration: number;
            /** @description The queue priority from 0-100 of the EncoreJob. */
            priority?: number;
          };
        };
        path: {
          /** Name of the encore instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description URL to job resource */
            url: string;
            /** @description Status of a job */
            status: string;
          };
        };
      };
    };
  };
  '/license': {
    /** Get license information */
    get: {
      responses: {
        /** Default Response */
        200: {
          schema: string;
        };
      };
    };
  };
}

export interface definitions {}

export interface operations {}

export interface external {}

export type Encore =
  paths['/encoreinstance/{id}']['get']['responses']['200']['schema'];

export type EncoreConfig =
  paths['/encoreinstance']['post']['parameters']['body']['body'];

import {
  Context,
  createInstance,
  waitForInstanceReady
} from '@osaas/client-core';

/**
 * SVT Encore
 *
 * SVT Encore is an open-source video transcoding system for efficient cloud-based video processing. It offers scalable, automated transcoding to optimize video workflows for various platforms, supporting multiple formats and codecs. With a focus on cost-effectiveness and flexibility, Encore is ideal for broadcasters and content creators needing dynamic scaling and reliable performance in their video production and distribution processes.
 *
 * Create a new queue
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EncoreConfig}} body - Service instance configuration
 * @returns {Encore} - Service instance
 * @example
 * import { Context, createEncoreInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEncoreInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
export async function createEncoreInstance(
  ctx: Context,
  body: EncoreConfig
): Promise<Encore> {
  const serviceAccessToken = await ctx.getServiceAccessToken('encore');
  const instance = await createInstance(
    ctx,
    'encore',
    serviceAccessToken,
    body
  );
  await waitForInstanceReady('encore', instance.name, ctx);
  return instance;
}
